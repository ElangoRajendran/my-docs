# This is a basic workflow to help you get started with Actions
name: CI
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest  

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with: 
          repository: 'ElangoRajendran/my-docs-test'
          ref: 'Test-master'
          path: ug_spellchecker
                                  
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: Spell-Checker
          
      - run: mkdir cireports
                    
      - name: Get changed files
        run: |
          git diff --name-only HEAD^ HEAD --line-prefix=$pwd\ >> ../cireports/content.txt
        working-directory: ./Spell-Checker
      
      - run: powershell .\build.ps1 -Target build -Platform "UWP" -Targetbranch ${{ github.base_ref }} -Branch ${{ github.head_ref }} 
        working-directory: ./ug_spellchecker

      - run: ls
        working-directory: ./cireports
        
      - name: publish cireport FilePathValidation results
        uses: actions/upload-artifact@v1
        with:
            name: Build Artifacts
            path: ./cireports/
    
      - run: powershell .\build.ps1 -Target PostComments -Mytoken ${{ secrets.MY_COMMENT_TOKEN }} -Repository_Name ${{ github.event.repository.name }} -PullRequest_Number ${{ github.event.number }} -CIJobNumber ${{ github.run_id }}
        working-directory: ./ug_spellchecker
  
  
      - run: powershell .\build.ps1 -Target GitHubCIReportValidation
        working-directory: ./ug_spellchecker
        
      
      - uses: actions/github-script@v4
        with:
          script: |
            const jobs = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.run_id }},
            });
            console.log(jobs[jobs.length-1].id); // not fail-safe
          result-encoding: string
      - run: |
          echo "${{ format('{0}/checks?check_run_id={1}', github.event.pull_request._links.html.href, steps.query-jobs.outputs.result) }}"
